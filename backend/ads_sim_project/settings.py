"""
Django settings for ads_sim_project project.

Generated by 'django-admin startproject' using Django 4.2.23.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import os # For environment variables

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-zg9=&!dne11to^r%@tbv8tu@w5@i&e3o#er08qiy7%ap#9=w2s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Local apps
    "users.apps.UsersConfig",
    "products.apps.ProductsConfig",
    "campaigns.apps.CampaignsConfig", # New campaigns app

    # Third-party apps
    "rest_framework",
    "rest_framework_simplejwt",
    "corsheaders",
    "drf_spectacular",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware", # CORS Middleware
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "ads_sim_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "ads_sim_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Default to SQLite if DB environment variables are not set
USE_POSTGRESQL = os.getenv('USE_POSTGRESQL', 'False').lower() in ('true', '1', 't')

if USE_POSTGRESQL:
    DB_NAME = os.getenv('DB_NAME', 'ads_sim_db')
    DB_USER = os.getenv('DB_USER', 'ads_sim_user')
    DB_PASSWORD = os.getenv('DB_PASSWORD', 'securepassword') # Replace with a strong default or ensure it's always set in env
    DB_HOST = os.getenv('DB_HOST', 'localhost')
    DB_PORT = os.getenv('DB_PORT', '5432')

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST,
            'PORT': DB_PORT,
        }
    }
else:
    # Default to SQLite for local development if USE_POSTGRESQL is not True
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.CustomUser"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    # Add other DRF settings like pagination, permissions if needed globally
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Amazon Ads Simulator API",
    "DESCRIPTION": "API for the Amazon Ads Simulator application",
    "VERSION": "0.1.0",
    "SERVE_INCLUDE_SCHEMA": False, # Do not serve schema directly, use /api/schema/
    # OTHER SETTINGS
}

# SIMPLE_JWT settings (optional, defaults are often fine to start)
from datetime import timedelta
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60), # Default is 5 minutes
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # Default is 1 day
    "ROTATE_REFRESH_TOKENS": False,                 # Default is False
    "BLACKLIST_AFTER_ROTATION": False,              # Default is False
    # ... other settings
}

# CORS settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Assuming React runs on port 3000 for development
    "http://127.0.0.1:3000",
    # Add other origins as needed (e.g., your deployed frontend URL)
]
# Or, for more permissive local development (not recommended for production):
# CORS_ALLOW_ALL_ORIGINS = True # If True, CORS_ALLOWED_ORIGINS is ignored

# If you use CSRF protection with a separate frontend, you might need:
# CORS_ALLOW_CREDENTIALS = True
# CSRF_TRUSTED_ORIGINS = ['http://localhost:3000']
